// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using OpenKHS.Data;
using System;

namespace OpenKHS.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OpenKHS.Models.DateRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("End");

                    b.Property<int?>("FriendId");

                    b.Property<DateTime>("Start");

                    b.HasKey("Id");

                    b.HasIndex("FriendId");

                    b.ToTable("DateRange");
                });

            modelBuilder.Entity("OpenKHS.Models.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Attendant");

                    b.Property<bool>("AwaySpeaker");

                    b.Property<bool>("ClmmBibleReading");

                    b.Property<bool>("ClmmCbsConductor");

                    b.Property<bool>("ClmmCbsReader");

                    b.Property<bool>("ClmmChairman");

                    b.Property<bool>("ClmmGems");

                    b.Property<bool>("ClmmLacParts");

                    b.Property<bool>("ClmmMainHallOnly");

                    b.Property<bool>("ClmmPrayer");

                    b.Property<bool>("ClmmSchoolAssistant");

                    b.Property<bool>("ClmmSchoolBibleStudy");

                    b.Property<bool>("ClmmSchoolInitialCall");

                    b.Property<bool>("ClmmSchoolMonthPresentations");

                    b.Property<bool>("ClmmSchoolReturnVisit");

                    b.Property<bool>("ClmmSchoolTalk");

                    b.Property<bool>("ClmmSecondSchoolCounselor");

                    b.Property<bool>("ClmmSecondSchoolOnly");

                    b.Property<bool>("ClmmTreasures");

                    b.Property<string>("Name");

                    b.Property<bool>("Platform");

                    b.Property<bool>("PmChairman");

                    b.Property<bool>("PublicSpeaker");

                    b.Property<bool>("RovingMic");

                    b.Property<bool>("Security");

                    b.Property<bool>("SoundDesk");

                    b.Property<bool>("WtConductor");

                    b.Property<bool>("WtReader");

                    b.HasKey("Id");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("OpenKHS.Models.PmSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AttendantId");

                    b.Property<int?>("ChairmanId");

                    b.Property<int?>("PlatformId");

                    b.Property<int?>("PublicTalkId");

                    b.Property<int?>("RovingMic1Id");

                    b.Property<int?>("RovingMic2Id");

                    b.Property<int?>("SecurityId");

                    b.Property<int?>("SoundDeskId");

                    b.Property<int>("Week");

                    b.Property<int?>("WtConductorId");

                    b.Property<int?>("WtReaderId");

                    b.HasKey("Id");

                    b.HasIndex("AttendantId");

                    b.HasIndex("ChairmanId");

                    b.HasIndex("PlatformId");

                    b.HasIndex("PublicTalkId");

                    b.HasIndex("RovingMic1Id");

                    b.HasIndex("RovingMic2Id");

                    b.HasIndex("SecurityId");

                    b.HasIndex("SoundDeskId");

                    b.HasIndex("WtConductorId");

                    b.HasIndex("WtReaderId");

                    b.ToTable("PmSchedules");
                });

            modelBuilder.Entity("OpenKHS.Models.PublicTalk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FriendId");

                    b.Property<int>("TalkNumber");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("FriendId");

                    b.ToTable("PublicTalk");
                });

            modelBuilder.Entity("OpenKHS.Models.DateRange", b =>
                {
                    b.HasOne("OpenKHS.Models.Friend")
                        .WithMany("UnavailablePeriods")
                        .HasForeignKey("FriendId");
                });

            modelBuilder.Entity("OpenKHS.Models.PmSchedule", b =>
                {
                    b.HasOne("OpenKHS.Models.Friend", "Attendant")
                        .WithMany()
                        .HasForeignKey("AttendantId");

                    b.HasOne("OpenKHS.Models.Friend", "Chairman")
                        .WithMany()
                        .HasForeignKey("ChairmanId");

                    b.HasOne("OpenKHS.Models.Friend", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId");

                    b.HasOne("OpenKHS.Models.PublicTalk", "PublicTalk")
                        .WithMany()
                        .HasForeignKey("PublicTalkId");

                    b.HasOne("OpenKHS.Models.Friend", "RovingMic1")
                        .WithMany()
                        .HasForeignKey("RovingMic1Id");

                    b.HasOne("OpenKHS.Models.Friend", "RovingMic2")
                        .WithMany()
                        .HasForeignKey("RovingMic2Id");

                    b.HasOne("OpenKHS.Models.Friend", "Security")
                        .WithMany()
                        .HasForeignKey("SecurityId");

                    b.HasOne("OpenKHS.Models.Friend", "SoundDesk")
                        .WithMany()
                        .HasForeignKey("SoundDeskId");

                    b.HasOne("OpenKHS.Models.Friend", "WtConductor")
                        .WithMany()
                        .HasForeignKey("WtConductorId");

                    b.HasOne("OpenKHS.Models.Friend", "WtReader")
                        .WithMany()
                        .HasForeignKey("WtReaderId");
                });

            modelBuilder.Entity("OpenKHS.Models.PublicTalk", b =>
                {
                    b.HasOne("OpenKHS.Models.Friend", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId");
                });
#pragma warning restore 612, 618
        }
    }
}
