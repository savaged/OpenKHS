// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using OpenKHS.Data;
using System;

namespace OpenKHS.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("OpenKHS.Models.ClmmSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AttendantId");

                    b.Property<int?>("BibleReadingId");

                    b.Property<int?>("BibleStudyId");

                    b.Property<int?>("CbsConductorId");

                    b.Property<int?>("CbsReaderId");

                    b.Property<int?>("ChairmanId");

                    b.Property<int?>("ClosingPrayerId");

                    b.Property<int?>("GemsId");

                    b.Property<int?>("InitialCallId");

                    b.Property<int?>("LacPart1Id");

                    b.Property<int?>("LacPart2Id");

                    b.Property<int?>("LacPart3Id");

                    b.Property<int?>("OpeningPrayerId");

                    b.Property<int?>("PlatformId");

                    b.Property<int?>("PresentationsForMonthId");

                    b.Property<int?>("ReturnVisitId");

                    b.Property<int?>("RovingMic1Id");

                    b.Property<int?>("RovingMic2Id");

                    b.Property<int?>("SchoolTalkId");

                    b.Property<int?>("SecurityId");

                    b.Property<int?>("SoundDeskId");

                    b.Property<int?>("TreasuresId");

                    b.Property<DateTime>("WeekStarting");

                    b.HasKey("Id");

                    b.HasIndex("AttendantId");

                    b.HasIndex("BibleReadingId");

                    b.HasIndex("BibleStudyId");

                    b.HasIndex("CbsConductorId");

                    b.HasIndex("CbsReaderId");

                    b.HasIndex("ChairmanId");

                    b.HasIndex("ClosingPrayerId");

                    b.HasIndex("GemsId");

                    b.HasIndex("InitialCallId");

                    b.HasIndex("LacPart1Id");

                    b.HasIndex("LacPart2Id");

                    b.HasIndex("LacPart3Id");

                    b.HasIndex("OpeningPrayerId");

                    b.HasIndex("PlatformId");

                    b.HasIndex("PresentationsForMonthId");

                    b.HasIndex("ReturnVisitId");

                    b.HasIndex("RovingMic1Id");

                    b.HasIndex("RovingMic2Id");

                    b.HasIndex("SchoolTalkId");

                    b.HasIndex("SecurityId");

                    b.HasIndex("SoundDeskId");

                    b.HasIndex("TreasuresId");

                    b.ToTable("ClmmSchedules");
                });

            modelBuilder.Entity("OpenKHS.Models.DateRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("End");

                    b.Property<int?>("FriendId");

                    b.Property<DateTime>("Start");

                    b.HasKey("Id");

                    b.HasIndex("FriendId");

                    b.ToTable("UnavailablePeriods");
                });

            modelBuilder.Entity("OpenKHS.Models.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AssignmentTally");

                    b.Property<bool>("Attendant");

                    b.Property<bool>("AwaySpeaker");

                    b.Property<bool>("ClmmBibleReading");

                    b.Property<bool>("ClmmCbsConductor");

                    b.Property<bool>("ClmmCbsReader");

                    b.Property<bool>("ClmmChairman");

                    b.Property<bool>("ClmmGems");

                    b.Property<bool>("ClmmLacParts");

                    b.Property<bool>("ClmmMainHallOnly");

                    b.Property<bool>("ClmmPrayer");

                    b.Property<bool>("ClmmSchoolAssistant");

                    b.Property<bool>("ClmmSchoolBibleStudy");

                    b.Property<bool>("ClmmSchoolInitialCall");

                    b.Property<bool>("ClmmSchoolMonthPresentations");

                    b.Property<bool>("ClmmSchoolReturnVisit");

                    b.Property<bool>("ClmmSchoolTalk");

                    b.Property<bool>("ClmmSecondSchoolCounselor");

                    b.Property<bool>("ClmmSecondSchoolOnly");

                    b.Property<bool>("ClmmTreasures");

                    b.Property<bool>("MainWtConductor");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("Platform");

                    b.Property<bool>("PmChairman");

                    b.Property<bool>("PublicSpeaker");

                    b.Property<bool>("RovingMic");

                    b.Property<bool>("Security");

                    b.Property<bool>("SoundDesk");

                    b.Property<bool>("WtConductor");

                    b.Property<bool>("WtReader");

                    b.HasKey("Id");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("OpenKHS.Models.MeetingPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int?>("FriendId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("FriendId");

                    b.ToTable("MeetingPart");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MeetingPart");
                });

            modelBuilder.Entity("OpenKHS.Models.PmSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AttendantId");

                    b.Property<int?>("ChairmanId");

                    b.Property<int?>("PlatformId");

                    b.Property<int?>("PublicTalkId");

                    b.Property<int?>("RovingMic1Id");

                    b.Property<int?>("RovingMic2Id");

                    b.Property<int?>("SecurityId");

                    b.Property<int?>("SoundDeskId");

                    b.Property<DateTime>("WeekStarting");

                    b.Property<int?>("WtConductorId");

                    b.Property<int?>("WtReaderId");

                    b.HasKey("Id");

                    b.HasIndex("AttendantId");

                    b.HasIndex("ChairmanId");

                    b.HasIndex("PlatformId");

                    b.HasIndex("PublicTalkId");

                    b.HasIndex("RovingMic1Id");

                    b.HasIndex("RovingMic2Id");

                    b.HasIndex("SecurityId");

                    b.HasIndex("SoundDeskId");

                    b.HasIndex("WtConductorId");

                    b.HasIndex("WtReaderId");

                    b.ToTable("PmSchedules");
                });

            modelBuilder.Entity("OpenKHS.Models.PublicTalk", b =>
                {
                    b.HasBaseType("OpenKHS.Models.MeetingPart");

                    b.Property<int>("TalkNumber");

                    b.ToTable("PublicTalk");

                    b.HasDiscriminator().HasValue("PublicTalk");
                });

            modelBuilder.Entity("OpenKHS.Models.SchoolMeetingPart", b =>
                {
                    b.HasBaseType("OpenKHS.Models.MeetingPart");

                    b.Property<int>("CounselPoint");

                    b.Property<int?>("StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("SchoolMeetingPart");

                    b.HasDiscriminator().HasValue("SchoolMeetingPart");
                });

            modelBuilder.Entity("OpenKHS.Models.AssistedSchoolMeetingPart", b =>
                {
                    b.HasBaseType("OpenKHS.Models.SchoolMeetingPart");

                    b.Property<int?>("AssistantId");

                    b.HasIndex("AssistantId");

                    b.ToTable("AssistedSchoolMeetingPart");

                    b.HasDiscriminator().HasValue("AssistedSchoolMeetingPart");
                });

            modelBuilder.Entity("OpenKHS.Models.ClmmSchedule", b =>
                {
                    b.HasOne("OpenKHS.Models.Friend", "Attendant")
                        .WithMany()
                        .HasForeignKey("AttendantId");

                    b.HasOne("OpenKHS.Models.Friend", "BibleReading")
                        .WithMany()
                        .HasForeignKey("BibleReadingId");

                    b.HasOne("OpenKHS.Models.AssistedSchoolMeetingPart", "BibleStudy")
                        .WithMany()
                        .HasForeignKey("BibleStudyId");

                    b.HasOne("OpenKHS.Models.Friend", "CbsConductor")
                        .WithMany()
                        .HasForeignKey("CbsConductorId");

                    b.HasOne("OpenKHS.Models.Friend", "CbsReader")
                        .WithMany()
                        .HasForeignKey("CbsReaderId");

                    b.HasOne("OpenKHS.Models.Friend", "Chairman")
                        .WithMany()
                        .HasForeignKey("ChairmanId");

                    b.HasOne("OpenKHS.Models.Friend", "ClosingPrayer")
                        .WithMany()
                        .HasForeignKey("ClosingPrayerId");

                    b.HasOne("OpenKHS.Models.Friend", "Gems")
                        .WithMany()
                        .HasForeignKey("GemsId");

                    b.HasOne("OpenKHS.Models.AssistedSchoolMeetingPart", "InitialCall")
                        .WithMany()
                        .HasForeignKey("InitialCallId");

                    b.HasOne("OpenKHS.Models.MeetingPart", "LacPart1")
                        .WithMany()
                        .HasForeignKey("LacPart1Id");

                    b.HasOne("OpenKHS.Models.MeetingPart", "LacPart2")
                        .WithMany()
                        .HasForeignKey("LacPart2Id");

                    b.HasOne("OpenKHS.Models.MeetingPart", "LacPart3")
                        .WithMany()
                        .HasForeignKey("LacPart3Id");

                    b.HasOne("OpenKHS.Models.Friend", "OpeningPrayer")
                        .WithMany()
                        .HasForeignKey("OpeningPrayerId");

                    b.HasOne("OpenKHS.Models.Friend", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId");

                    b.HasOne("OpenKHS.Models.Friend", "PresentationsForMonth")
                        .WithMany()
                        .HasForeignKey("PresentationsForMonthId");

                    b.HasOne("OpenKHS.Models.AssistedSchoolMeetingPart", "ReturnVisit")
                        .WithMany()
                        .HasForeignKey("ReturnVisitId");

                    b.HasOne("OpenKHS.Models.Friend", "RovingMic1")
                        .WithMany()
                        .HasForeignKey("RovingMic1Id");

                    b.HasOne("OpenKHS.Models.Friend", "RovingMic2")
                        .WithMany()
                        .HasForeignKey("RovingMic2Id");

                    b.HasOne("OpenKHS.Models.SchoolMeetingPart", "SchoolTalk")
                        .WithMany()
                        .HasForeignKey("SchoolTalkId");

                    b.HasOne("OpenKHS.Models.Friend", "Security")
                        .WithMany()
                        .HasForeignKey("SecurityId");

                    b.HasOne("OpenKHS.Models.Friend", "SoundDesk")
                        .WithMany()
                        .HasForeignKey("SoundDeskId");

                    b.HasOne("OpenKHS.Models.Friend", "Treasures")
                        .WithMany()
                        .HasForeignKey("TreasuresId");
                });

            modelBuilder.Entity("OpenKHS.Models.DateRange", b =>
                {
                    b.HasOne("OpenKHS.Models.Friend")
                        .WithMany("UnavailablePeriods")
                        .HasForeignKey("FriendId");
                });

            modelBuilder.Entity("OpenKHS.Models.MeetingPart", b =>
                {
                    b.HasOne("OpenKHS.Models.Friend", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId");
                });

            modelBuilder.Entity("OpenKHS.Models.PmSchedule", b =>
                {
                    b.HasOne("OpenKHS.Models.Friend", "Attendant")
                        .WithMany()
                        .HasForeignKey("AttendantId");

                    b.HasOne("OpenKHS.Models.Friend", "Chairman")
                        .WithMany()
                        .HasForeignKey("ChairmanId");

                    b.HasOne("OpenKHS.Models.Friend", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId");

                    b.HasOne("OpenKHS.Models.PublicTalk", "PublicTalk")
                        .WithMany()
                        .HasForeignKey("PublicTalkId");

                    b.HasOne("OpenKHS.Models.Friend", "RovingMic1")
                        .WithMany()
                        .HasForeignKey("RovingMic1Id");

                    b.HasOne("OpenKHS.Models.Friend", "RovingMic2")
                        .WithMany()
                        .HasForeignKey("RovingMic2Id");

                    b.HasOne("OpenKHS.Models.Friend", "Security")
                        .WithMany()
                        .HasForeignKey("SecurityId");

                    b.HasOne("OpenKHS.Models.Friend", "SoundDesk")
                        .WithMany()
                        .HasForeignKey("SoundDeskId");

                    b.HasOne("OpenKHS.Models.Friend", "WtConductor")
                        .WithMany()
                        .HasForeignKey("WtConductorId");

                    b.HasOne("OpenKHS.Models.Friend", "WtReader")
                        .WithMany()
                        .HasForeignKey("WtReaderId");
                });

            modelBuilder.Entity("OpenKHS.Models.SchoolMeetingPart", b =>
                {
                    b.HasOne("OpenKHS.Models.Friend", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("OpenKHS.Models.AssistedSchoolMeetingPart", b =>
                {
                    b.HasOne("OpenKHS.Models.Friend", "Assistant")
                        .WithMany()
                        .HasForeignKey("AssistantId");
                });
#pragma warning restore 612, 618
        }
    }
}
